{"version":3,"sources":["assets/images/no-avatar.png","components/Users/Users.module.css","components/common/Paginator/Paginator.module.css","components/common/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx"],"names":["module","exports","Paginator","totalItemsCount","pageSize","onPageChanged","currentPage","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","firstPageOfPortion","lastPageOfPortion","className","s","paginatorList","prevButton","onClick","filter","p","map","selectedPage","e","nextButton","User","user","followingInProgress","unfollow","follow","item","usersLeft","to","id","userPhoto","src","photos","small","noAvatar","followed","disabled","some","usersRight","name","status","usersLocation","Users","totalUsersCount","props","usersWrapper","usersData","u","getUsers","state","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","isFetching","getFollowingInProgress","UsersContainer","pageNumber","this","Preloader","React","Component","connect","setCurrentPage","setTotalUsersCount","toggleFollowingProgress","requestUsers"],"mappings":"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","file":"static/js/5.cb7ae60a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/no-avatar.107c548b.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersWrapper\":\"Users_usersWrapper__1UkNA\",\"item\":\"Users_item__1f26o\",\"usersLeft\":\"Users_usersLeft__318Ri\",\"usersRight\":\"Users_usersRight__3GGBL\",\"userPhoto\":\"Users_userPhoto__2SLGa\",\"usersLocation\":\"Users_usersLocation__B_s49\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginatorList\":\"Paginator_paginatorList__1nqd-\",\"selectedPage\":\"Paginator_selectedPage__1UrHL\",\"prevButton\":\"Paginator_prevButton__1xABT\",\"nextButton\":\"Paginator_nextButton__34LRV\"};","import s from \"./Paginator.module.css\";\r\nimport React, {useState} from \"react\";\r\n\r\nlet Paginator = ({totalItemsCount, pageSize, onPageChanged, currentPage, portionSize}) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n    let pages = [];\r\n\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let firstPageOfPortion = (portionNumber - 1) * portionSize + 1;\r\n    let lastPageOfPortion = portionNumber * portionSize;\r\n\r\n    let prevButtonAction = () => {\r\n        onPageChanged(firstPageOfPortion - portionSize);\r\n        setPortionNumber(portionNumber - 1);\r\n    }\r\n    let nextButtonAction = () => {\r\n        onPageChanged(firstPageOfPortion + portionSize);\r\n        setPortionNumber(portionNumber + 1);\r\n    }\r\n\r\n    return (\r\n        <div className={s.paginatorList}>\r\n            {portionNumber > 1 &&\r\n                <button className={s.prevButton} onClick={prevButtonAction}>Prev</button>}\r\n            {pages\r\n                .filter(p => p >= firstPageOfPortion && p <= lastPageOfPortion)\r\n                .map((p) => {\r\n                return <span className={currentPage === p && s.selectedPage} onClick={(e) => {\r\n                    onPageChanged(p)\r\n                }}>{p}</span>\r\n            })}\r\n            {portionNumber < portionCount &&\r\n            <button className={s.nextButton} onClick={nextButtonAction}>Next</button>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Paginator;","import s from \"./Users.module.css\";\r\nimport noAvatar from \"../../assets/images/no-avatar.png\";\r\nimport React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nlet User = ({user, followingInProgress, unfollow, follow}) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <div className={s.usersLeft}>\r\n                <div>\r\n                    <NavLink to={'/profile/' + user.id}>\r\n                        <img className={s.userPhoto} src={user.photos.small != null ? user.photos.small : noAvatar}/>\r\n                    </NavLink>\r\n                </div>\r\n                <div>\r\n                    {user.followed\r\n                        ? <button disabled={followingInProgress.some(id => id === user.id)} onClick={() => {\r\n                            unfollow(user.id);\r\n                        }}>Unfollow</button>\r\n                        : <button disabled={followingInProgress.some(id => id === user.id)} onClick={() => {\r\n                            follow(user.id);\r\n                        }}>Follow</button>}\r\n\r\n                </div>\r\n            </div>\r\n            <div className={s.usersRight}>\r\n                <div>\r\n                    <div>{user.name}</div>\r\n                    <div>{user.status}</div>\r\n                </div>\r\n                <div className={s.usersLocation}>\r\n                    <div>{\"u.location.country\"}</div>\r\n                    <div>{\"u.location.city\"}</div>\r\n                </div>\r\n            </div>\r\n        </div>)\r\n}\r\n\r\nexport default User;","import s from \"./Users.module.css\";\r\nimport React from \"react\";\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\n\r\nlet Users = ({currentPage, totalUsersCount, pageSize, onPageChanged, ...props}) => {\r\n\r\n    return (\r\n        <div className={s.usersWrapper}>\r\n            <Paginator currentPage={currentPage} totalItemsCount={totalUsersCount} pageSize={pageSize}\r\n                       onPageChanged={onPageChanged} portionSize={10}/>\r\n            {props.usersData.map((u) => <User user={u}\r\n                                              key={u.id}\r\n                                              followingInProgress={props.followingInProgress}\r\n                                              unfollow={props.unfollow}\r\n                                              follow={props.follow}/>)}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Users;","export const getUsers = (state) => {\r\n    return state.usersPage.usersData\r\n}\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize\r\n}\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage\r\n}\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching\r\n}\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress\r\n}","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    follow, requestUsers,\r\n    setCurrentPage,\r\n    setTotalUsersCount, toggleFollowingProgress,\r\n    unfollow\r\n} from \"../../redux/users-reducer\";\r\nimport Users from \"./Users\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount, getUsers\r\n} from \"../../redux/users-selectors\";\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n        const {currentPage, pageSize, totalUsersCount} = this.props;\r\n        this.props.getUsers(currentPage, pageSize, totalUsersCount);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n\r\n        this.props.getUsers(pageNumber, this.props.pageSize, this.props.totalUsersCount);\r\n    };\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader/> : null}\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   currentPage={this.props.currentPage}\r\n                   onPageChanged={this.onPageChanged}\r\n                   unfollow={this.props.unfollow}\r\n                   follow={this.props.follow}\r\n                   usersData={this.props.usersData}\r\n                   followingInProgress={this.props.followingInProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        usersData: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,\r\n    {\r\n        follow, unfollow,\r\n        setCurrentPage, setTotalUsersCount,\r\n        toggleFollowingProgress,\r\n        getUsers: requestUsers})(UsersContainer);"],"sourceRoot":""}